{"ast":null,"code":"var _jsxFileName = \"D:\\\\react js course\\\\Sorting Algorithm\\\\src\\\\components\\\\Visuals.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport BubbleSort from \"./BubbleSort\";\nimport InsertionSort from \"./InsertionSort\";\nimport MergeSort from \"./MergeSort\";\nimport QuickSort from \"./QuickSort\";\nimport SelectionSort from \"./SelectionSort\";\nimport \"./Visuals.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Visuals = () => {\n  _s();\n\n  const myState = useSelector(state => state.updateProps);\n  const dispatch = useDispatch();\n  const color = myState.color;\n  const range = myState.range;\n  const [playname, setPlayname] = useState(\"PLAY\");\n\n  const changeValues = () => {\n    let new_arr = [...myState.values];\n\n    for (let i = 0; i < new_arr.length; i++) document.getElementById(i).style.transform = `translateX(${i * 11}px)`;\n\n    dispatch({\n      type: \"CHANGE_VALUES\"\n    });\n  };\n\n  const handlePlay = play => {\n    if (!myState.play) {\n      document.getElementById(\"change-btn\").disabled = true;\n      document.getElementById(\"change-btn\").style.backgroundColor = \"grey\";\n      document.getElementById(\"play-btn\").disabled = true;\n      document.getElementById(\"play-btn\").style.backgroundColor = \"grey\"; // document.getElementById(\"pause-btn\").disabled = false;\n      // document.getElementById(\"pause-btn\").style.backgroundColor =\"rgb(0, 149, 199)\";\n    } else {\n      return;\n    }\n\n    dispatch({\n      type: \"PLAY\",\n      _play: play\n    });\n  }; // const handlePause = (pause) => {\n  //   if (!myState.pause)\n  //   {\n  //     // document.getElementById(\"play-btn\").disabled = false;\n  //     document.getElementById(\"play-btn\").style.backgroundColor =\"green\";\n  //     document.getElementById(\"play-btn\").value = setPlayname(\"RESUME\");\n  //     document.getElementById(\"pause-btn\").disabled = true;\n  //     document.getElementById(\"pause-btn\").style.backgroundColor =\"grey\";\n  //     document.getElementById(\"change-btn\").disabled = true;\n  //     document.getElementById(\"change-btn\").style.backgroundColor =\"grey\";\n  //   }\n  //   else\n  //   {\n  //     return;\n  //   }\n  //   dispatch({\n  //     type: \"PAUSE\",\n  //     _pause: pause,\n  //   });\n  // };\n\n\n  useEffect(() => {\n    if (!myState.play) {\n      document.getElementById(\"play-btn\").disabled = false;\n      document.getElementById(\"play-btn\").style.backgroundColor = \"rgb(0, 149, 199)\";\n      document.getElementById(\"change-btn\").disabled = false;\n      document.getElementById(\"change-btn\").style.backgroundColor = \"rgb(0, 149, 199)\"; // document.getElementById(\"pause-btn\").disabled = true;\n      // document.getElementById(\"pause-btn\").style.backgroundColor =\"grey\";\n    }\n  }, [myState.play]);\n  let speed = myState.speed;\n  if (myState.algorithm === \"selection\") speed *= 3;else if (myState.algorithm === \"merge\") speed *= 5;else if (myState.algorithm === \"quick\") speed *= 6;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"visuals\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"algorithm__name\",\n        children: [\"Technique:\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"algo_name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 47\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"array_size_cont\",\n          children: [\"Array Size:\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"slider_value\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 44\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"visualizer\",\n        children: [myState.algorithm === \"quick\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend__lable\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this), \" Pivot elements\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"visual__items\",\n          style: {\n            width: `${myState.values.length * 11}px`\n          },\n          children: myState.values.map(item => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"visual__item\",\n              id: item[1],\n              style: {\n                transition: `${speed / 1000}s linear all`,\n                transform: `translateX(${item[1] * 11}px)`\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: item[0]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"visual\",\n                style: {\n                  height: `${item[0] * 3}px`,\n                  backgroundColor: color,\n                  width: range < 35 ? \"8px\" : \"6px\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 21\n              }, this)]\n            }, item[1], true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"visual__btns\",\n        children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"change-btn\",\n          onClick: changeValues,\n          children: \"change values\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"play-btn\",\n          onClick: () => handlePlay(true),\n          children: [\" \", playname, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BubbleSort, {\n        category: \"Bubble Sort\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MergeSort, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InsertionSort, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SelectionSort, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(QuickSort, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Visuals, \"aIWkwpNKJQhTXIA3WPY7g5RwLb4=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Visuals;\nexport default Visuals;\n\nvar _c;\n\n$RefreshReg$(_c, \"Visuals\");","map":{"version":3,"sources":["D:/react js course/Sorting Algorithm/src/components/Visuals.js"],"names":["React","useState","useEffect","useSelector","useDispatch","BubbleSort","InsertionSort","MergeSort","QuickSort","SelectionSort","Visuals","myState","state","updateProps","dispatch","color","range","playname","setPlayname","changeValues","new_arr","values","i","length","document","getElementById","style","transform","type","handlePlay","play","disabled","backgroundColor","_play","speed","algorithm","width","map","item","transition","height"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAO,eAAP;;;;AACA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAMC,OAAO,GAAGR,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACC,WAAlB,CAA3B;AACA,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;AACA,QAAMW,KAAK,GAAGJ,OAAO,CAACI,KAAtB;AACA,QAAMC,KAAK,GAAGL,OAAO,CAACK,KAAtB;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BjB,QAAQ,CAAC,MAAD,CAAxC;;AAEA,QAAMkB,YAAY,GAAG,MAAM;AACzB,QAAIC,OAAO,GAAG,CAAC,GAAGT,OAAO,CAACU,MAAZ,CAAd;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,OAAO,CAACG,MAA5B,EAAoCD,CAAC,EAArC,EACEE,QAAQ,CAACC,cAAT,CAAwBH,CAAxB,EAA2BI,KAA3B,CAAiCC,SAAjC,GAA8C,cAAaL,CAAC,GAAG,EAAG,KAAlE;;AACFR,IAAAA,QAAQ,CAAC;AACPc,MAAAA,IAAI,EAAE;AADC,KAAD,CAAR;AAGD,GAPD;;AASA,QAAMC,UAAU,GAAIC,IAAD,IAAU;AAC3B,QAAI,CAACnB,OAAO,CAACmB,IAAb,EAAmB;AACjBN,MAAAA,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCM,QAAtC,GAAiD,IAAjD;AACAP,MAAAA,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCC,KAAtC,CAA4CM,eAA5C,GAA8D,MAA9D;AACAR,MAAAA,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCM,QAApC,GAA+C,IAA/C;AACAP,MAAAA,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCC,KAApC,CAA0CM,eAA1C,GAA4D,MAA5D,CAJiB,CAMjB;AACA;AACD,KARD,MAQO;AACL;AACD;;AACDlB,IAAAA,QAAQ,CAAC;AACPc,MAAAA,IAAI,EAAE,MADC;AAEPK,MAAAA,KAAK,EAAEH;AAFA,KAAD,CAAR;AAID,GAhBD,CAhBoB,CAkCpB;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA5B,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACS,OAAO,CAACmB,IAAb,EAAmB;AACjBN,MAAAA,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCM,QAApC,GAA+C,KAA/C;AACAP,MAAAA,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCC,KAApC,CAA0CM,eAA1C,GACE,kBADF;AAEAR,MAAAA,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCM,QAAtC,GAAiD,KAAjD;AACAP,MAAAA,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCC,KAAtC,CAA4CM,eAA5C,GACE,kBADF,CALiB,CAQjB;AACA;AACD;AACF,GAZQ,EAYN,CAACrB,OAAO,CAACmB,IAAT,CAZM,CAAT;AAcA,MAAII,KAAK,GAAGvB,OAAO,CAACuB,KAApB;AACA,MAAIvB,OAAO,CAACwB,SAAR,KAAsB,WAA1B,EAAuCD,KAAK,IAAI,CAAT,CAAvC,KACK,IAAIvB,OAAO,CAACwB,SAAR,KAAsB,OAA1B,EAAmCD,KAAK,IAAI,CAAT,CAAnC,KACA,IAAIvB,OAAO,CAACwB,SAAR,KAAsB,OAA1B,EAAmCD,KAAK,IAAI,CAAT;AACxC,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,8DACsC;AAAM,UAAA,EAAE,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA,gBADtC,eAEI;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,6DAC+B;AAAM,YAAA,EAAE,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA,kBAD/B;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,mBAEGvB,OAAO,CAACwB,SAAR,KAAsB,OAAtB,iBACC;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,kBADF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAQI;AACE,UAAA,SAAS,EAAC,eADZ;AAEE,UAAA,KAAK,EAAE;AAAEC,YAAAA,KAAK,EAAG,GAAEzB,OAAO,CAACU,MAAR,CAAeE,MAAf,GAAwB,EAAG;AAAvC,WAFT;AAAA,oBAIGZ,OAAO,CAACU,MAAR,CAAegB,GAAf,CAAoBC,IAAD,IAAU;AAC5B,gCACE;AACE,cAAA,SAAS,EAAC,cADZ;AAGE,cAAA,EAAE,EAAEA,IAAI,CAAC,CAAD,CAHV;AAIE,cAAA,KAAK,EAAE;AACLC,gBAAAA,UAAU,EAAG,GAAEL,KAAK,GAAG,IAAK,cADvB;AAELP,gBAAAA,SAAS,EAAG,cAAaW,IAAI,CAAC,CAAD,CAAJ,GAAU,EAAG;AAFjC,eAJT;AAAA,sCASE;AAAA,0BAAKA,IAAI,CAAC,CAAD;AAAT;AAAA;AAAA;AAAA;AAAA,sBATF,eAUE;AACE,gBAAA,SAAS,EAAC,QADZ;AAEE,gBAAA,KAAK,EAAE;AACLE,kBAAAA,MAAM,EAAG,GAAEF,IAAI,CAAC,CAAD,CAAJ,GAAU,CAAE,IADlB;AAELN,kBAAAA,eAAe,EAAEjB,KAFZ;AAGLqB,kBAAAA,KAAK,EAAEpB,KAAK,GAAG,EAAR,GAAa,KAAb,GAAqB;AAHvB;AAFT;AAAA;AAAA;AAAA;AAAA,sBAVF;AAAA,eAEOsB,IAAI,CAAC,CAAD,CAFX;AAAA;AAAA;AAAA;AAAA,oBADF;AAqBD,WAtBA;AAJH;AAAA;AAAA;AAAA;AAAA,gBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,eA8CE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,EAAE,EAAC,YAAX;AAAwB,UAAA,OAAO,EAAEnB,YAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAKE;AAAQ,UAAA,EAAE,EAAC,UAAX;AAAsB,UAAA,OAAO,EAAE,MAAMU,UAAU,CAAC,IAAD,CAA/C;AAAA,qBACG,GADH,EAEGZ,QAFH,EAEa,GAFb;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cA9CF,eAyDE,QAAC,UAAD;AAAY,QAAA,QAAQ,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA,cAzDF,eA0DE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cA1DF,eA2DE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,cA3DF,eA4DE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,cA5DF,eA6DE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cA7DF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAoED,CA9ID;;GAAMP,O;UACYP,W,EACCC,W;;;KAFbM,O;AAgJN,eAAeA,OAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport BubbleSort from \"./BubbleSort\";\r\nimport InsertionSort from \"./InsertionSort\";\r\nimport MergeSort from \"./MergeSort\";\r\nimport QuickSort from \"./QuickSort\";\r\nimport SelectionSort from \"./SelectionSort\";\r\nimport \"./Visuals.css\";\r\nconst Visuals = () => {\r\n  const myState = useSelector((state) => state.updateProps);\r\n  const dispatch = useDispatch();\r\n  const color = myState.color;\r\n  const range = myState.range;\r\n  const [playname, setPlayname] = useState(\"PLAY\");\r\n\r\n  const changeValues = () => {\r\n    let new_arr = [...myState.values];\r\n    for (let i = 0; i < new_arr.length; i++)\r\n      document.getElementById(i).style.transform = `translateX(${i * 11}px)`;\r\n    dispatch({\r\n      type: \"CHANGE_VALUES\",\r\n    });\r\n  };\r\n\r\n  const handlePlay = (play) => {\r\n    if (!myState.play) {\r\n      document.getElementById(\"change-btn\").disabled = true;\r\n      document.getElementById(\"change-btn\").style.backgroundColor = \"grey\";\r\n      document.getElementById(\"play-btn\").disabled = true;\r\n      document.getElementById(\"play-btn\").style.backgroundColor = \"grey\";\r\n\r\n      // document.getElementById(\"pause-btn\").disabled = false;\r\n      // document.getElementById(\"pause-btn\").style.backgroundColor =\"rgb(0, 149, 199)\";\r\n    } else {\r\n      return;\r\n    }\r\n    dispatch({\r\n      type: \"PLAY\",\r\n      _play: play,\r\n    });\r\n  };\r\n\r\n  // const handlePause = (pause) => {\r\n  //   if (!myState.pause)\r\n  //   {\r\n  //     // document.getElementById(\"play-btn\").disabled = false;\r\n  //     document.getElementById(\"play-btn\").style.backgroundColor =\"green\";\r\n  //     document.getElementById(\"play-btn\").value = setPlayname(\"RESUME\");\r\n\r\n  //     document.getElementById(\"pause-btn\").disabled = true;\r\n  //     document.getElementById(\"pause-btn\").style.backgroundColor =\"grey\";\r\n  //     document.getElementById(\"change-btn\").disabled = true;\r\n  //     document.getElementById(\"change-btn\").style.backgroundColor =\"grey\";\r\n  //   }\r\n  //   else\r\n  //   {\r\n  //     return;\r\n  //   }\r\n  //   dispatch({\r\n  //     type: \"PAUSE\",\r\n  //     _pause: pause,\r\n  //   });\r\n  // };\r\n\r\n  useEffect(() => {\r\n    if (!myState.play) {\r\n      document.getElementById(\"play-btn\").disabled = false;\r\n      document.getElementById(\"play-btn\").style.backgroundColor =\r\n        \"rgb(0, 149, 199)\";\r\n      document.getElementById(\"change-btn\").disabled = false;\r\n      document.getElementById(\"change-btn\").style.backgroundColor =\r\n        \"rgb(0, 149, 199)\";\r\n\r\n      // document.getElementById(\"pause-btn\").disabled = true;\r\n      // document.getElementById(\"pause-btn\").style.backgroundColor =\"grey\";\r\n    }\r\n  }, [myState.play]);\r\n\r\n  let speed = myState.speed;\r\n  if (myState.algorithm === \"selection\") speed *= 3;\r\n  else if (myState.algorithm === \"merge\") speed *= 5;\r\n  else if (myState.algorithm === \"quick\") speed *= 6;\r\n  return (\r\n    <>\r\n      <div className=\"visuals\">\r\n        <div className=\"algorithm__name\">\r\n            Technique:&nbsp;&nbsp;&nbsp;&nbsp;<span id=\"algo_name\"></span>\r\n            <div className=\"array_size_cont\">\r\n              Array Size:&nbsp;&nbsp;&nbsp;<span id=\"slider_value\"></span>\r\n            </div>\r\n        </div>\r\n        <div className=\"visualizer\">\r\n          \r\n          {myState.algorithm === \"quick\" && (\r\n            <div className=\"legend\">\r\n              <div className=\"legend__lable\"></div> Pivot elements\r\n            </div>\r\n          )}\r\n          {\r\n            <div\r\n              className=\"visual__items\"\r\n              style={{ width: `${myState.values.length * 11}px` }}\r\n            >\r\n              {myState.values.map((item) => {\r\n                return (\r\n                  <div\r\n                    className=\"visual__item\"\r\n                    key={item[1]}\r\n                    id={item[1]}\r\n                    style={{\r\n                      transition: `${speed / 1000}s linear all`,\r\n                      transform: `translateX(${item[1] * 11}px)`,\r\n                    }}\r\n                  >\r\n                    <h4>{item[0]}</h4>\r\n                    <div\r\n                      className=\"visual\"\r\n                      style={{\r\n                        height: `${item[0] * 3}px`,\r\n                        backgroundColor: color,\r\n                        width: range < 35 ? \"8px\" : \"6px\",\r\n                      }}\r\n                    ></div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          }\r\n        </div>\r\n\r\n        <div className=\"visual__btns\">\r\n          <hr />\r\n          <button id=\"change-btn\" onClick={changeValues}>\r\n            change values\r\n          </button>\r\n          <button id=\"play-btn\" onClick={() => handlePlay(true)}>\r\n            {\" \"}\r\n            {playname}{\" \"}\r\n          </button>\r\n          {/* <button id=\"pause-btn\" onClick={() => handlePause(false)}>Pause</button> */}\r\n        </div>\r\n        <BubbleSort category=\"Bubble Sort\"/>\r\n        <MergeSort/>\r\n        <InsertionSort/>\r\n        <SelectionSort/>\r\n        <QuickSort/>\r\n      </div>\r\n      \r\n    </>\r\n  );\r\n};\r\n\r\nexport default Visuals;\r\n"]},"metadata":{},"sourceType":"module"}
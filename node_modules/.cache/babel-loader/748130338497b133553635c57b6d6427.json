{"ast":null,"code":"import React from 'react';\nconst initial = {\n  algorithm: \"bubble\",\n  color: \"#35c6ff\",\n  speed: 100,\n  range: 30,\n  play: false,\n  values: [],\n  timeout: [],\n  pause: false,\n  desc: false\n};\n\nconst updateProps = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initial;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'UPDATE_RANGE':\n      {\n        let arr = [];\n\n        for (let i = 0; i < action.range; i++) {\n          arr.push([Math.floor(Math.random() * 100) + 1, i]);\n        }\n\n        return { ...state,\n          range: action.range,\n          values: arr\n        };\n      }\n\n    case 'UPDATE_COLOR':\n      {\n        return { ...state,\n          color: action.color\n        };\n      }\n\n    case 'UPDATE_SPEED':\n      {\n        return { ...state,\n          speed: action.speed\n        };\n      }\n\n    case 'UPDATE_VALUES':\n      {\n        return { ...state,\n          values: action._values\n        };\n      }\n\n    case 'UPDATE_ALGORITHM':\n      {\n        return { ...state,\n          algorithm: action.algorithm\n        };\n      }\n\n    case 'UPDATE_TIEMOUTS':\n      {\n        return { ...state,\n          timeouts: action._timeouts\n        };\n      }\n\n    case 'PLAY':\n      {\n        return { ...state,\n          play: action._play\n        };\n      }\n\n    case 'PAUSE':\n      {\n        return { ...state,\n          pause: action._pause\n        };\n      }\n\n    case 'CHANGE_VALUES':\n      {\n        let arr = [],\n            range = state.range;\n\n        for (let i = 0; i < range; i++) arr.push([Math.floor(Math.random() * 100) + 1, i]);\n\n        return { ...state,\n          values: arr\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default updateProps;","map":{"version":3,"sources":["D:/react js course/Sorting Algorithm/src/reducer/updateProps.js"],"names":["React","initial","algorithm","color","speed","range","play","values","timeout","pause","desc","updateProps","state","action","type","arr","i","push","Math","floor","random","_values","timeouts","_timeouts","_play","_pause"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,OAAO,GAAE;AACZC,EAAAA,SAAS,EAAE,QADC;AAEZC,EAAAA,KAAK,EAAC,SAFM;AAGZC,EAAAA,KAAK,EAAG,GAHI;AAIZC,EAAAA,KAAK,EAAG,EAJI;AAKZC,EAAAA,IAAI,EAAG,KALK;AAMZC,EAAAA,MAAM,EAAG,EANG;AAOZC,EAAAA,OAAO,EAAG,EAPE;AAQZC,EAAAA,KAAK,EAAE,KARK;AASZC,EAAAA,IAAI,EAAG;AATK,CAAf;;AAWA,MAAMC,WAAW,GAAG,YAA2B;AAAA,MAA1BC,KAA0B,uEAApBX,OAAoB;AAAA,MAAXY,MAAW;;AAC5C,UAAOA,MAAM,CAACC,IAAd;AAEG,SAAK,cAAL;AACA;AACI,YAAIC,GAAG,GAAC,EAAR;;AACA,aAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAACH,MAAM,CAACR,KAAxB,EAA+BW,CAAC,EAAhC,EACA;AACED,UAAAA,GAAG,CAACE,IAAJ,CAAS,CAACC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,GAAzB,IAA8B,CAA/B,EAAkCJ,CAAlC,CAAT;AACD;;AACD,eAAO,EAAC,GAAGJ,KAAJ;AAAWP,UAAAA,KAAK,EAAEQ,MAAM,CAACR,KAAzB;AAAgCE,UAAAA,MAAM,EAAEQ;AAAxC,SAAP;AACH;;AAED,SAAK,cAAL;AACA;AACI,eAAO,EAAC,GAAGH,KAAJ;AAAWT,UAAAA,KAAK,EAAEU,MAAM,CAACV;AAAzB,SAAP;AACH;;AAED,SAAK,cAAL;AACA;AACI,eAAO,EAAC,GAAGS,KAAJ;AAAWR,UAAAA,KAAK,EAAES,MAAM,CAACT;AAAzB,SAAP;AACH;;AAED,SAAK,eAAL;AACA;AACI,eAAO,EAAC,GAAGQ,KAAJ;AAAWL,UAAAA,MAAM,EAAEM,MAAM,CAACQ;AAA1B,SAAP;AACH;;AAED,SAAK,kBAAL;AACA;AACI,eAAO,EAAC,GAAGT,KAAJ;AAAWV,UAAAA,SAAS,EAAEW,MAAM,CAACX;AAA7B,SAAP;AACH;;AAED,SAAK,iBAAL;AACA;AACG,eAAO,EAAC,GAAGU,KAAJ;AAAWU,UAAAA,QAAQ,EAACT,MAAM,CAACU;AAA3B,SAAP;AACF;;AAED,SAAK,MAAL;AACA;AACG,eAAO,EAAC,GAAGX,KAAJ;AAAUN,UAAAA,IAAI,EAACO,MAAM,CAACW;AAAtB,SAAP;AACF;;AAED,SAAK,OAAL;AACA;AACG,eAAO,EAAC,GAAGZ,KAAJ;AAAUH,UAAAA,KAAK,EAACI,MAAM,CAACY;AAAvB,SAAP;AACF;;AAED,SAAK,eAAL;AACA;AACG,YAAIV,GAAG,GAAC,EAAR;AAAA,YAAYV,KAAK,GAAGO,KAAK,CAACP,KAA1B;;AACA,aAAI,IAAIW,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGX,KAAnB,EAA0BW,CAAC,EAA3B,EACGD,GAAG,CAACE,IAAJ,CAAS,CAACC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,GAAzB,IAA8B,CAA/B,EAAkCJ,CAAlC,CAAT;;AACH,eAAO,EAAC,GAAGJ,KAAJ;AAAUL,UAAAA,MAAM,EAACQ;AAAjB,SAAP;AACF;;AAED;AACG,aAAOH,KAAP;AAxDN;AA0DF,CA3DD;;AA6DA,eAAeD,WAAf","sourcesContent":["import React from 'react'\r\nconst initial ={\r\n   algorithm :\"bubble\",\r\n   color:\"#35c6ff\",\r\n   speed : 100,\r\n   range : 30,\r\n   play : false,\r\n   values : [],\r\n   timeout : [],\r\n   pause: false,\r\n   desc : false\r\n}\r\nconst updateProps = (state=initial, action) => {\r\n   switch(action.type)\r\n   {\r\n      case 'UPDATE_RANGE':\r\n      {\r\n          let arr=[];\r\n          for(let i = 0; i<action.range; i++)\r\n          {\r\n            arr.push([Math.floor(Math.random()*100)+1, i]);\r\n          }\r\n          return {...state, range: action.range, values: arr};\r\n      }\r\n\r\n      case 'UPDATE_COLOR':\r\n      {         \r\n          return {...state, color: action.color};\r\n      }\r\n\r\n      case 'UPDATE_SPEED':\r\n      {         \r\n          return {...state, speed: action.speed};\r\n      }\r\n\r\n      case 'UPDATE_VALUES':\r\n      {         \r\n          return {...state, values: action._values};\r\n      }\r\n\r\n      case 'UPDATE_ALGORITHM':\r\n      {         \r\n          return {...state, algorithm: action.algorithm};\r\n      }\r\n\r\n      case 'UPDATE_TIEMOUTS':\r\n      {\r\n         return {...state, timeouts:action._timeouts};\r\n      }\r\n\r\n      case 'PLAY': \r\n      {\r\n         return {...state,play:action._play};\r\n      }\r\n\r\n      case 'PAUSE': \r\n      {\r\n         return {...state,pause:action._pause};\r\n      }\r\n\r\n      case 'CHANGE_VALUES':\r\n      {\r\n         let arr=[], range = state.range;\r\n         for(let i = 0; i < range; i++)\r\n            arr.push([Math.floor(Math.random()*100)+1, i]);\r\n         return {...state,values:arr};\r\n      }\r\n\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n\r\nexport default updateProps\r\n"]},"metadata":{},"sourceType":"module"}
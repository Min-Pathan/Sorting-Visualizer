{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BubbleSort = () => {\n  _s();\n\n  const myState = useSelector(state => state.updateProps);\n  const dispatch = useDispatch();\n  let values = myState.values.map(item => item[0]);\n  let ids = myState.values.map(item => item[1]);\n  let size = values.length;\n\n  const solve = () => {\n    for (let i = 0, timer = 0; i < size - 1; timer += i, i++) {\n      setTimeout(() => {\n        for (let j = 0; j < size - i - 1; j++) {\n          setTimeout(() => {\n            document.getElementById(ids[j]).childNodes[1].style.backgroundColor = \"black\";\n            document.getElementById(ids[j + 1]).childNodes[1].style.backgroundColor = \"black\";\n            setTimeout(() => {\n              document.getElementById(ids[j]).childNodes[1].style.backgroundColor = myState.color;\n              document.getElementById(ids[j + 1]).childNodes[1].style.backgroundColor = myState.color;\n            }, myState.speed - 10);\n\n            if (values[j] > values[j + 1]) {\n              let temp = values[j];\n              values[j] = values[j + 1];\n              values[j + 1] = temp;\n              temp = ids[j];\n              ids[j] = ids[j + 1];\n              ids[j + 1] = temp;\n              document.getElementById(ids[j + 1]).style.transform = `translateX(${(j + 1) * 11}px)`;\n              document.getElementById(ids[j]).style.transform = `translateX(${j * 11}px)`;\n            }\n          }, j * myState.speed);\n        }\n      }, timer * myState.speed);\n    }\n\n    setTimeout(() => {\n      dispatch({\n        type: \"PLAY\",\n        _play: false\n      });\n      dispatch({\n        type: \"PAUSE\",\n        _play: false\n      });\n      dispatch({\n        type: \"UPDATE_COLOR\",\n        color: \"rgb(0, 182, 0)\"\n      });\n    }, (myState.values.length - 1) * myState.values.length / 2 * myState.speed + 50); //Setting Time complexities\n\n    document.getElementById(\"Time_Worst\").innerText = \"O(N^2)\";\n    document.getElementById(\"Time_Average\").innerText = \"Θ(N^2)\";\n    document.getElementById(\"Time_Best\").innerText = \"Ω(N)\"; //Setting Space complexity\n\n    document.getElementById(\"Space_Worst\").innerText = \"O(1)\"; //Setting algo name\n\n    document.getElementById(\"algo_name\").innerText = \"Bubble Sort\";\n  };\n\n  useEffect(() => {\n    if (myState.algorithm === \"bubble\") {\n      if (myState.play) {\n        solve(); //Setting bar colors name\n\n        var select = document.getElementById('color');\n        var value = select.options[select.selectedIndex].value;\n        document.getElementById(\"unsorted_bar_color\").style.background = value;\n        document.getElementById(\"bar_unsorted\").innerText = \"Unsorted\";\n        document.getElementById(\"sorted_bar_color\").style.background = \"green\";\n        document.getElementById(\"bar_sorted\").innerText = \"Sorted\";\n        document.getElementById(\"comparing_bar_color\").style.background = \"black\";\n        document.getElementById(\"bar_compare\").innerText = \"Comparing\";\n      }\n    }\n  }, [myState.play]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n_s(BubbleSort, \"skz74H6TDd0rxZTKTPFjX8UUY3g=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = BubbleSort;\nexport default BubbleSort;\n\nvar _c;\n\n$RefreshReg$(_c, \"BubbleSort\");","map":{"version":3,"sources":["D:/react js course/Sorting Algorithm/src/components/BubbleSort.js"],"names":["React","useEffect","useDispatch","useSelector","BubbleSort","myState","state","updateProps","dispatch","values","map","item","ids","size","length","solve","i","timer","setTimeout","j","document","getElementById","childNodes","style","backgroundColor","color","speed","temp","transform","type","_play","innerText","algorithm","play","select","value","options","selectedIndex","background"],"mappings":"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","sourcesContent":["import React, { useEffect} from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst BubbleSort = () => {\r\n  const myState = useSelector((state) => state.updateProps);\r\n  const dispatch = useDispatch();\r\n\r\n  let values = myState.values.map((item) => item[0]);\r\n  let ids = myState.values.map((item) => item[1]);\r\n  let size = values.length\r\n  const solve = () => {    \r\n    for (let i = 0, timer = 0; i < size-1; timer += i, i++) {\r\n      setTimeout(() => {\r\n        for (let j = 0; j < size-i-1; j++) {\r\n          setTimeout(() => {\r\n\r\n            document.getElementById(ids[j]).childNodes[1].style.backgroundColor = \"black\";\r\n            document.getElementById(ids[j+1]).childNodes[1].style.backgroundColor = \"black\";\r\n            \r\n            setTimeout(() => {\r\n\r\n              document.getElementById(ids[j]).childNodes[1].style.backgroundColor = myState.color;\r\n              document.getElementById(ids[j+1]).childNodes[1].style.backgroundColor = myState.color;\r\n              \r\n            }, myState.speed - 10);\r\n\r\n            if (values[j] > values[j + 1]) {\r\n              let temp = values[j];\r\n              values[j] = values[j+1];\r\n              values[j+1] = temp;\r\n\r\n              temp = ids[j];\r\n              ids[j] = ids[j+1];\r\n              ids[j+1] = temp;\r\n\r\n              document.getElementById( ids[j + 1] ).style.transform = `translateX(${(j + 1) * 11}px)`;\r\n              document.getElementById(ids[j]).style.transform = `translateX(${ j * 11 }px)`;\r\n\r\n              \r\n            }\r\n          }, (j) * myState.speed);\r\n        }\r\n        \r\n      }, timer * myState.speed);\r\n      \r\n    }\r\n    setTimeout(() => {\r\n      dispatch({\r\n        type: \"PLAY\",\r\n        _play: false,\r\n      });\r\n\r\n      dispatch({\r\n        type: \"PAUSE\",\r\n        _play: false,\r\n      });\r\n\r\n      dispatch({\r\n        type: \"UPDATE_COLOR\",\r\n        color: \"rgb(0, 182, 0)\",\r\n      });\r\n    }, (((myState.values.length - 1) * myState.values.length) / 2) * myState.speed + 50);\r\n    \r\n    //Setting Time complexities\r\n    document.getElementById(\"Time_Worst\").innerText=\"O(N^2)\";\r\n    document.getElementById(\"Time_Average\").innerText=\"Θ(N^2)\";\r\n    document.getElementById(\"Time_Best\").innerText=\"Ω(N)\";\r\n\r\n    //Setting Space complexity\r\n    document.getElementById(\"Space_Worst\").innerText=\"O(1)\";\r\n\r\n    //Setting algo name\r\n    document.getElementById(\"algo_name\").innerText=\"Bubble Sort\"  \r\n        \r\n  };\r\n\r\n  useEffect(() => {\r\n    if (myState.algorithm === \"bubble\") {\r\n      if (myState.play) \r\n      {\r\n        solve();  \r\n\r\n        //Setting bar colors name\r\n        var select = document.getElementById('color');\r\n        var value = select.options[select.selectedIndex].value;\r\n        \r\n        document.getElementById(\"unsorted_bar_color\").style.background = value;\r\n        document.getElementById(\"bar_unsorted\").innerText=\"Unsorted\";\r\n\r\n        document.getElementById(\"sorted_bar_color\").style.background = \"green\";\r\n        document.getElementById(\"bar_sorted\").innerText=\"Sorted\";\r\n\r\n        document.getElementById(\"comparing_bar_color\").style.background = \"black\";\r\n        document.getElementById(\"bar_compare\").innerText=\"Comparing\";\r\n      }  \r\n    }\r\n  }, [myState.play]);\r\n\r\n  return <></>;\r\n};\r\n\r\nexport default BubbleSort;\r\n"]},"metadata":{},"sourceType":"module"}
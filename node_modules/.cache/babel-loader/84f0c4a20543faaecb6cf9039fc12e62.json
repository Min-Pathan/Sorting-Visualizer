{"ast":null,"code":"var _jsxFileName = \"D:\\\\react js course\\\\Sorting Algorithm\\\\src\\\\components\\\\BinarySearch.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BinarySearch = () => {\n  _s();\n\n  const myState = useSelector(state => state.updateProps);\n  const dispatch = useDispatch();\n  let values = myState.values.map(item => item[0]);\n  let ids = myState.values.map(item => item[1]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BinarySearch, \"t85RZGGVKlIj3yYbYzpOsyBv53E=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = BinarySearch;\nexport default BinarySearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"BinarySearch\");","map":{"version":3,"sources":["D:/react js course/Sorting Algorithm/src/components/BinarySearch.js"],"names":["React","useState","useEffect","useSelector","useDispatch","BinarySearch","myState","state","updateProps","dispatch","values","map","item","ids"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;;AACA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACvB,QAAMC,OAAO,GAAGH,WAAW,CAAEI,KAAD,IAAWA,KAAK,CAACC,WAAlB,CAA3B;AACA,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AAEA,MAAIM,MAAM,GAAGJ,OAAO,CAACI,MAAR,CAAeC,GAAf,CAAoBC,IAAD,IAAUA,IAAI,CAAC,CAAD,CAAjC,CAAb;AACA,MAAIC,GAAG,GAAGP,OAAO,CAACI,MAAR,CAAeC,GAAf,CAAoBC,IAAD,IAAUA,IAAI,CAAC,CAAD,CAAjC,CAAV;AACF,sBACE;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAXD;;GAAMP,Y;UACcF,W,EACCC,W;;;KAFfC,Y;AAaN,eAAeA,YAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nconst BinarySearch = () => {\r\n    const myState = useSelector((state) => state.updateProps);\r\n    const dispatch = useDispatch();\r\n  \r\n    let values = myState.values.map((item) => item[0]);\r\n    let ids = myState.values.map((item) => item[1]);\r\n  return (\r\n    <div>\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BinarySearch\r\n"]},"metadata":{},"sourceType":"module"}